basePath: /api/v1
definitions:
  models.User:
    properties:
      created_at:
        type: string
      device_id:
        type: string
      email:
        type: string
      id:
        type: string
      last_modified_at:
        type: string
      name:
        type: string
    type: object
  responses.CreateUserResponse:
    properties:
      id:
        type: string
    type: object
  utils.APIResponse:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
  validators.CreateUserRequest:
    properties:
      device_id:
        type: string
      email:
        type: string
      name:
        minLength: 1
        type: string
    required:
    - device_id
    - name
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is the API of Bill Breaker
  title: Bill Breaker API
  version: "1.0"
paths:
  /user:
    post:
      consumes:
      - application/json
      description: create new user with new device_id
      parameters:
      - description: Create new user by device_id
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/validators.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/responses.CreateUserResponse'
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Create new user
      tags:
      - users
  /user/{id}:
    get:
      consumes:
      - application/json
      description: get user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Get user
      tags:
      - users
swagger: "2.0"
